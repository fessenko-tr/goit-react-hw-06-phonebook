{"version":3,"sources":["components/Contact/Contact.module.css","components/Filter/Filter.module.css","components/ContactForm/initialState.js","components/ContactForm/ContactForm.js","components/Contact/Contact.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Notification/Notification.js","hooks/useContacts.js","hooks/useLocalStorage.js","App.js","hooks/useFilter.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","initialState","name","number","ContactForm","addNewContact","useReducer","state","action","option","value","dispatch","onSubmit","e","preventDefault","className","s","form","label","htmlFor","input","type","id","pattern","title","required","onChange","currentTarget","Contact","deleteFunction","listItem","listBtn","onClick","ContactList","contactsList","deleteContactBtn","contacts","map","Filter","updateFilterFunc","Notification","msg","useContacts","useState","JSON","parse","localStorage","getItem","setState","useEffect","setItem","stringify","useLocalStorage","setContacts","find","el","toast","info","nanoid","filter","App","deleteContact","setFilter","toLowerCase","includes","useFilter","updateFilter","contactsToShow","getFilteredContacs","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f893cd34.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"Contact_listItem__1h_tY\",\"listBtn\":\"Contact_listBtn__2NkiL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1UDEu\",\"input\":\"Filter_input__3ZZ1a\"};","const initialState = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nexport default initialState;\r\n","import React, { useReducer } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactForm.module.css\";\r\nimport initialState from \"./initialState\";\r\n\r\nfunction ContactForm({ addNewContact }) {\r\n  const [state, dispatch] = useReducer(handleChange, initialState);\r\n\r\n  function handleChange(state, action) {\r\n    const { option, value } = action;\r\n\r\n    if (option === \"reset\") {\r\n      return initialState;\r\n    }\r\n\r\n    return { ...state, [option]: value };\r\n  }\r\n\r\n  function submitNewContact(e) {\r\n    e.preventDefault();\r\n    addNewContact(state.name, state.number);\r\n    dispatch({ option: \"reset\" });\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={submitNewContact} className={s.form}>\r\n      <label className={s.label} htmlFor=\"name\">\r\n        Name\r\n      </label>\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        id=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n        required\r\n        value={state.name}\r\n        onChange={(e) => {\r\n          const { name, value } = e.currentTarget;\r\n          dispatch({ option: name, value });\r\n        }}\r\n      />\r\n      <label className={s.label} htmlFor=\"number\">\r\n        Number\r\n      </label>\r\n      <input\r\n        className={s.input}\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        id=\"number\"\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n        required\r\n        value={state.number}\r\n        onChange={(e) => {\r\n          const { name, value } = e.currentTarget;\r\n          dispatch({ option: name, value });\r\n        }}\r\n      />\r\n\r\n      <button type=\"submit\">Add contact</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  addNewContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Contact.module.css\";\r\n\r\nfunction Contact({ id, name, number, deleteFunction }) {\r\n  return (\r\n    <li className={s.listItem}>\r\n      <p>{`${name}: ${number}`}</p>\r\n      <button\r\n        className={s.listBtn}\r\n        onClick={() => {\r\n          deleteFunction(id);\r\n        }}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nContact.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  deleteFunction: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import Contact from \"../Contact\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction ContactList({ contactsList, deleteContactBtn }) {\r\n  const contacts = contactsList.map(({ id, name, number }) => (\r\n    <Contact\r\n      key={id}\r\n      id={id}\r\n      name={name}\r\n      number={number}\r\n      deleteFunction={deleteContactBtn}\r\n    />\r\n  ));\r\n\r\n  return <ul>{contacts}</ul>;\r\n}\r\n\r\nContactList.propTypes = {\r\n  contactsList: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  deleteContactBtn: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nfunction Filter({ value, updateFilterFunc }) {\r\n  return (\r\n    <>\r\n      <label className={s.label} htmlFor=\"filter\">\r\n        Find contacts by name\r\n      </label>\r\n      <input\r\n        className={s.input}\r\n        id=\"filter\"\r\n        value={value}\r\n        onChange={updateFilterFunc}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  updateFilterFunc: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","function Notification({ msg }) {\r\n  return <p>{msg}</p>;\r\n}\r\n\r\nexport default Notification;\r\n","import useLocalStorage from \"./useLocalStorage\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nfunction useContacts() {\r\n  const [contacts, setContacts] = useLocalStorage(\"contacts\");\r\n\r\n  const addNewContact = (name, number) => {\r\n    if (contacts.find((el) => el.name === name)) {\r\n      return toast.info(`${name} is already in contacts`);\r\n    }\r\n    setContacts([...contacts, { id: nanoid(), name, number }]);\r\n  };\r\n\r\n  const deleteContact = (id) => {\r\n    setContacts(contacts.filter((el) => el.id !== id));\r\n  };\r\n\r\n  return [contacts, addNewContact, deleteContact];\r\n}\r\n\r\nexport default useContacts;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport default function useLocalStorage(id) {\r\n  const [state, setState] = useState(\r\n    () => JSON.parse(localStorage.getItem(id)) ?? []\r\n  );\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(id, JSON.stringify(state));\r\n  }, [state]);\r\n\r\n  return [state, setState];\r\n}\r\n","import { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport \"./App.css\";\r\nimport ContactForm from \"./components/ContactForm\";\r\nimport ContactList from \"./components/ContactList\";\r\nimport Filter from \"./components/Filter\";\r\nimport Notification from \"./components/Notification\";\r\n\r\nimport useFilter from \"./hooks/useFilter\";\r\nimport useContacts from \"./hooks/useContacts\";\r\n\r\nfunction App() {\r\n  const [contacts, addNewContact, deleteContact] = useContacts();\r\n  const [filter, updateFilter, getFilteredContacs] = useFilter();\r\n\r\n  const contactsToShow = getFilteredContacs(contacts);\r\n  const noContactsAdded = \"You seem not to have any contacts yet\";\r\n\r\n  return (\r\n    <>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm addNewContact={addNewContact} />\r\n      <h2>Contacts</h2>\r\n      {contacts.length ? (\r\n        <>\r\n          <Filter value={filter} updateFilterFunc={updateFilter} />\r\n          <ContactList\r\n            contactsList={contactsToShow}\r\n            deleteContactBtn={deleteContact}\r\n          />\r\n        </>\r\n      ) : (\r\n        <Notification msg={noContactsAdded} />\r\n      )}\r\n      <ToastContainer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { useState } from \"react\";\r\n\r\nexport default function useFilter() {\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  const updateFilter = (e) => {\r\n    const value = e.currentTarget.value;\r\n    setFilter(value);\r\n  };\r\n\r\n  const getFilteredContacs = (contacts) => {\r\n    return contacts.filter((e) =>\r\n      e.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  };\r\n\r\n  return [filter, updateFilter, getFilteredContacs];\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2-s9E\",\"label\":\"ContactForm_label__1-Wgl\",\"input\":\"ContactForm_input__1FbxL\"};"],"sourceRoot":""}